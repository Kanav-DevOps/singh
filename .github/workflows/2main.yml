name: Build, Package, and Email Application

on:
  push:
    branches:
      - main

jobs:
  build_package_and_email:
    runs-on: windows-latest
    
    env:
      SMTP_SERVER: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_PORT }}
      SMTP_EMAIL: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_EMAIL }}
      SMTP_PASSWORD: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install pyinstaller
        
    - name: Build executable
      run: |
        pyinstaller --onefile age_cal.py
        
    - name: Upload age_cal.exe artifact
      uses: actions/upload-artifact@v2
      with:
        name: age_cal_exe
        path: dist/age_cal.exe

    - name: Download age_cal.exe artifact
      uses: actions/download-artifact@v2
      with:
        name: age_cal_exe
        path: age_cal
        
    - name: Download and install Inno Setup
      run: |
        curl -L -o innosetup.exe "https://jrsoftware.org/download.php/is.exe"
        Start-Process -FilePath "innosetup.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -NoNewWindow -Wait
        
    - name: Run Inno Setup compiler
      run: |
        Start-Process -FilePath "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" -ArgumentList "inno.iss" -NoNewWindow -Wait
        
    - name: Print current directory contents
      run: |
        dir Output
        
    - name: Check SMTP environment variables
      run: |
        echo "SMTP_SERVER: $SMTP_SERVER"
        echo "SMTP_PORT: $SMTP_PORT"
        echo "SMTP_EMAIL: $SMTP_EMAIL"
        if (-not $SMTP_SERVER -or -not $SMTP_PORT -or -not $SMTP_EMAIL -or -not $SMTP_PASSWORD) {
          Write-Error "One or more required SMTP environment variables are missing or empty."
        }
      
    - name: Send email with setup.exe
      run: |
        $smtpServer = $SMTP_SERVER
        $smtpPort = $SMTP_PORT
        $smtpUser = $SMTP_EMAIL
        $smtpPass = $SMTP_PASSWORD
        $to = "kanavpreet@aarkglobalinc.com"
        $from = $SMTP_EMAIL
        $subject = "Build Artifact: setup.exe"
        $body = "The build artifact (setup.exe) is attached."
        $attachment = ".\Output\setup.exe"  # Adjusted path to setup.exe
        $securePassword = ConvertTo-SecureString -String $smtpPass -AsPlainText -Force
        $credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $smtpUser, $securePassword
        Send-MailMessage -From $from -To $to -Subject $subject -Body $body -SmtpServer $smtpServer -Port $smtpPort -UseSsl -Credential $credential -Attachments $attachment

    env:
      SMTP_SERVER: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_PORT }}
      SMTP_EMAIL: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_EMAIL }}
      SMTP_PASSWORD: ${{ secrets.mailenv.ACTIONS_SECRETS.SMTP_PASSWORD }}
